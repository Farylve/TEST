services:
  backend:
    build:
      context: ./back
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=postgresql://portfolio_user:portfolio_pass@postgres:5432/portfolio
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app

  frontend:
    build:
      context: ./front
    environment:
      - NODE_ENV=production
      - PORT=3000
      # - NEXT_PUBLIC_API_URL=
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - app
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1/healthz"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: portfolio
      POSTGRES_USER: portfolio_user
      POSTGRES_PASSWORD: portfolio_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U portfolio_user -d portfolio"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  app: {}

volumes:
  postgres_data: {}