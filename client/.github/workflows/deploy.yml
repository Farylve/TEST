name: Deployment Workflow

# Trigger this workflow on pushes to the specified branch
on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  cache: "npm"

            - name: Cache Next.js build
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.npm
                      ${{ github.workspace }}/client/.next/cache
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('client/package-lock.json') }}-${{ hashFiles('client/**/*.js', 'client/**/*.jsx', 'client/**/*.ts', 'client/**/*.tsx') }}
                  restore-keys: |
                      ${{ runner.os }}-nextjs-${{ hashFiles('client/package-lock.json') }}-
                      ${{ runner.os }}-nextjs-

            - name: Install dependencies
              run: |
                  cd client
                  npm ci

            - name: Build Next.js app
              run: |
                  cd client
                  npm run build

            - name: SSH Deploy
              # Use the 'appleboy/ssh-action' action for SSH deployment
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.HOST }} # Your server's IP address
                  username: ${{ secrets.USERNAME }} # Your server's username
                  key: ${{ secrets.SSH_PRIVATE_KEY }} # Your server's SSH private key
                  passphrase: ${{ secrets.SSH_PASSPHRASE }}
                  script: |
                      cd /var/www/nextjs # Specify the path to your app directory on the server
                      git pull
                      cd client # Navigate to client folder
                      npm install
                      npm run build
                      cd .. # Go back to root
                      pm2 delete nextjs || true # Delete existing process if exists
                      pm2 start ecosystem.config.js # Start with fresh configuration
                      pm2 status nextjs # Check the process status
                      pm2 save # Save the PM2 process list