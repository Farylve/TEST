name: Deploy to SpaceWeb

on:
    push:
        branches: ["main"]
    workflow_dispatch:

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            # Копируем весь проект на сервер
            - name: Copy project to remote server
              uses: garygrossgarten/github-action-scp@release
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USER }}
                  key: ${{ secrets.SSH_KEY }}
                  local: ./
                  remote: /opt/portfolio
                  recursive: true
                  verbose: true

            # Выполняем деплой-команды на сервере
            - name: Deploy on remote server
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USER }}
                  key: ${{ secrets.SSH_KEY }}
                  script: |
                      set -euo pipefail
                      export DEBIAN_FRONTEND=noninteractive

                      if ! command -v curl >/dev/null 2>&1; then
                        sudo apt-get update -y
                        sudo apt-get install -y curl ca-certificates
                      fi

                      if ! command -v docker >/dev/null 2>&1; then
                        curl -fsSL https://get.docker.com | sh
                      fi

                      if ! docker compose version >/dev/null 2>&1; then
                        sudo apt-get update -y
                        sudo apt-get install -y docker-compose-plugin
                      fi

                      cd /opt/portfolio
                      sudo docker compose -f docker-compose.prod.yml up -d --build

                      echo "Waiting for app to become healthy..."
                      for i in {1..60}; do
                        if curl -fsS http://localhost/healthz >/dev/null; then
                          echo "Healthy!"
                          exit 0
                        fi
                        sleep 2
                      done

                      echo "Health check failed"
                      docker compose ps
                      exit 1

            - name: Install Node for E2E tests
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Install Playwright and deps
              working-directory: ./front
              run: |
                  npm ci
                  npx playwright install --with-deps

            - name: Run E2E tests against production
              env:
                  BASE_URL: http://farylve.online
              working-directory: ./front
              run: npx playwright test
