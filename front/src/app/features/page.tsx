'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import Navigation from '@/components/Navigation';

export default function FeaturesPage() {
  const [activeFeature, setActiveFeature] = useState(0);
  const router = useRouter();

  const features = [
    {
      title: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–µ—Ä–∞',
      icon: 'üìä',
      description: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è backend —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
      details: [
        '–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API endpoints',
        '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–∫–ª–∏–∫–∞',
        '–í–∏–∑—É–∞–ª—å–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å—Ç–∞—Ç—É—Å–∞',
        '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö'
      ],
      color: 'blue'
    },
    {
      title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏',
      icon: '‚úÖ',
      description: 'CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –∑–∞–¥–∞—á–∞–º–∏ —á–µ—Ä–µ–∑ PostgreSQL',
      details: [
        '–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á',
        '–û—Ç–º–µ—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á',
        '–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á',
        '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö'
      ],
      color: 'green'
    },
    {
      title: 'API —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
      icon: 'üîß',
      description: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ REST API endpoints',
      details: [
        'Health check endpoint',
        'Server info endpoint',
        'Test data endpoint',
        'JSON response preview'
      ],
      color: 'purple'
    },
    {
      title: '–†–æ—É—Ç–∏–Ω–≥ Next.js',
      icon: 'üõ£Ô∏è',
      description: '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ —Ä–æ—É—Ç–∏–Ω–≥–∞',
      details: [
        '–ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏',
        '–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—Å—ã–ª–æ–∫',
        'Responsive –¥–∏–∑–∞–π–Ω',
        'SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è'
      ],
      color: 'orange'
    }
  ];

  const getColorClasses = (color: string) => {
    const colors = {
      blue: 'bg-blue-50 border-blue-200 text-blue-800',
      green: 'bg-green-50 border-green-200 text-green-800',
      purple: 'bg-purple-50 border-purple-200 text-purple-800',
      orange: 'bg-orange-50 border-orange-200 text-orange-800'
    };
    return colors[color as keyof typeof colors] || colors.blue;
  };

  return (
    <>
      <Navigation />
      <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
        <div className="max-w-6xl mx-auto px-4 py-12">
          <div className="text-center mb-12">
            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞
            </h1>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              –ò–∑—É—á–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞—à–µ–≥–æ full-stack –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            </p>
          </div>

          <div className="grid lg:grid-cols-2 gap-8">
            {/* Feature Cards */}
            <div className="space-y-4">
              {features.map((feature, index) => (
                <div
                  key={index}
                  className={`card cursor-pointer transition-all duration-300 ${
                    activeFeature === index 
                      ? 'ring-2 ring-blue-500 shadow-xl' 
                      : 'hover:shadow-lg'
                  }`}
                  onClick={() => setActiveFeature(index)}
                >
                  <div className="flex items-start space-x-4">
                    <div className={`p-3 rounded-lg border-2 ${getColorClasses(feature.color)}`}>
                      <span className="text-2xl">{feature.icon}</span>
                    </div>
                    <div className="flex-1">
                      <h3 className="text-xl font-semibold text-gray-900 mb-2">
                        {feature.title}
                      </h3>
                      <p className="text-gray-600">
                        {feature.description}
                      </p>
                    </div>
                  </div>
                </div>
              ))}
            </div>

            {/* Feature Details */}
            <div className="card">
              <div className="text-center mb-6">
                <div className={`inline-flex p-4 rounded-xl border-2 ${getColorClasses(features[activeFeature].color)}`}>
                  <span className="text-4xl">{features[activeFeature].icon}</span>
                </div>
                <h2 className="text-2xl font-bold text-gray-900 mt-4 mb-2">
                  {features[activeFeature].title}
                </h2>
                <p className="text-gray-600">
                  {features[activeFeature].description}
                </p>
              </div>

              <div className="space-y-3">
                <h3 className="text-lg font-semibold text-gray-900 mb-4">
                  –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
                </h3>
                {features[activeFeature].details.map((detail, index) => (
                  <div key={index} className="flex items-center space-x-3 p-3 bg-gray-50 rounded-lg">
                    <span className="w-2 h-2 bg-blue-500 rounded-full"></span>
                    <span className="text-gray-700">{detail}</span>
                  </div>
                ))}
              </div>

              <div className="mt-6 p-4 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg">
                <div className="flex items-center space-x-2 text-sm text-gray-600">
                  <span className="w-2 h-2 bg-green-500 rounded-full animate-pulse"></span>
                  <span>–§—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</span>
                </div>
              </div>
            </div>
          </div>

          {/* Interactive Demo Section */}
          <div className="mt-12 card">
            <h2 className="text-2xl font-bold text-gray-900 mb-6 text-center">
              üéÆ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
            </h2>
            <div className="grid md:grid-cols-3 gap-6">
              <div className="text-center p-6 bg-blue-50 rounded-lg">
                <div className="text-3xl mb-3">üè†</div>
                <h3 className="font-semibold text-gray-900 mb-2">–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</h3>
                <p className="text-sm text-gray-600 mb-4">
                  API —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏
                </p>
                <button 
                  onClick={() => router.push('/')}
                  className="btn-primary text-sm"
                >
                  –ü–µ—Ä–µ–π—Ç–∏
                </button>
              </div>
              
              <div className="text-center p-6 bg-green-50 rounded-lg">
                <div className="text-3xl mb-3">üìã</div>
                <h3 className="font-semibold text-gray-900 mb-2">–û –ø—Ä–æ–µ–∫—Ç–µ</h3>
                <p className="text-sm text-gray-600 mb-4">
                  –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ
                </p>
                <button 
                  onClick={() => router.push('/about')}
                  className="btn-primary text-sm"
                >
                  –ò–∑—É—á–∏—Ç—å
                </button>
              </div>
              
              <div className="text-center p-6 bg-purple-50 rounded-lg">
                <div className="text-3xl mb-3">üìß</div>
                <h3 className="font-semibold text-gray-900 mb-2">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>
                <p className="text-sm text-gray-600 mb-4">
                  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Å–≤—è–∑–∏ —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º
                </p>
                <button 
                  onClick={() => router.push('/contact')}
                  className="btn-primary text-sm"
                >
                  –°–≤—è–∑–∞—Ç—å—Å—è
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
